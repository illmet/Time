#generated by o1-preview

import os
from PIL import Image

def find_smallest_images(folder_path):
    """Finds the images with the smallest width and height in the specified folder.

    Args:
        folder_path (str): The path to the folder containing images.
    """
    # Initialize variables for minimum width and height
    min_width = None
    min_height = None
    image_min_width = None
    image_min_height = None

    # Supported image extensions
    image_extensions = ('.jpg', '.jpeg', '.png', '.bmp', '.gif', '.tiff')

    # Iterate over all files in the folder
    for filename in os.listdir(folder_path):
        if filename.lower().endswith(image_extensions):
            file_path = os.path.join(folder_path, filename)
            try:
                with Image.open(file_path) as img:
                    width, height = img.size
                    print(f"Image: {filename}, Width: {width}, Height: {height}")

                    # Check for minimum width
                    if min_width is None or width < min_width:
                        min_width = width
                        image_min_width = filename

                    # Check for minimum height
                    if min_height is None or height < min_height:
                        min_height = height
                        image_min_height = filename

            except IOError as e:
                print(f"Cannot open image {filename}: {e}")

    print("\nImage with Minimum Width:")
    if image_min_width:
        print(f"Filename: {image_min_width}")
        print(f"Width: {min_width}")
    else:
        print("No images found for minimum width.")

    print("\nImage with Minimum Height:")
    if image_min_height:
        print(f"Filename: {image_min_height}")
        print(f"Height: {min_height}")
    else:
        print("No images found for minimum height.")
folder_path = 'Amsterdam 1928'
find_smallest_images(folder_path)
